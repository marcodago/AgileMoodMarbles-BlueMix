[{"id":"6d9756f4.4d19d","type":"http in","z":"bdb3d653.b005e8","name":"Main","url":"/main","method":"get","upload":false,"swaggerDoc":"","x":230,"y":140,"wires":[["58cfde67.4dc26"]]},{"id":"1fe5c141.2f0907","type":"template","z":"bdb3d653.b005e8","name":"JavaScript - HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"\n<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\n<script type=\"text/javascript\">\n\nvar ws;\n    var wsUri = \"ws:\";\n    var loc = window.location;\n    console.log(loc);\n    if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n    // This needs to point to the web socket in the Node-RED flow\n    // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"main\",\"ws/main\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n\nfunction postData(val) {\n\n    var resultDiv = $(\"#resultDivContainer\");\n\n    var comment = prompt(\"Please, tell the team how you feel\", \"\");\n    var cty = (document.getElementById(\"country\").value).toUpperCase();\n    var dpt = (document.getElementById(\"dept\").value).toUpperCase();\n\n    var temp = '{\"country\":\"'+ cty + '\" ,\"dept\": \"'+ dpt + '\"}';\n    \n    if (ws) { ws.send(temp); } \n    \n    document.getElementById(\"feedback\").style.visibility=\"visible\";\n    \n    $.ajax({\n        url: \"https://thinkdeskmoods.mybluemix.net/savedata\",\n        type: \"POST\",\n        data: { \"signature\": \"mdago_v01_web\", \"type\": \"thinkdesk_comments\", \"country\": cty , \"dept\": dpt , \"mood\": val , \"comment\": comment },\n        dataType: \"json\",\n        success: function (result) {\n            switch (result) {\n                case true:\n                    processResponse(result);\n                    break;\n                default:\n                    resultDiv.html(result);\n            }\n        },\n    })\n};\n\n</script>\n\n<html>\n\n<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\">\n\n<head>\n    <title>Agile Mood Marbles</title>\n    <style>{{{payload.style}}}</style>\n</head>\n\n<body onload=\"wsConnect();\" onunload=\"ws.disconnect();\" bgcolor=\"#ECE9E8\">\n    \n    <table class=\"responsive\">\n        <thead>\n            <tr>\n                <div class='illustration'>\n                    <th colspan=\"3\"><img src=\"/images/moodmarbles.png\"></th>\n                </div>\n            </tr>\n            <tr>\n                <tr></tr>\n                <th colspan=\"3\" align=\"center\" style=\"color:#FFFFFF\">\n                    <h1>Tell the team how you feel !</h1>\n                </th>\n            </tr>\n        </thead>\n        \n        <tbody>\n            <tr>\n                <td></td>\n                <td width=\"auto\" align=\"center\">\n                        <fieldset>\n                            <ol>\n                                <li>\n                                    <label for=country>Country *</label>\n                                    <input id=country name=country type=text placeholder=\"Fill with your 3 digit country ID\" required autofocus>\n                                </li>\n                                <li>\n                                    <label for=dept>Department *</label>\n                                    <input id=dept name=dept type=text placeholder=\"Fill with your department ID\" required>\n                                </li>\n                            </ol>\n                        </fieldset>\n                        </td>\n                        </tr>\n                        <tr>\n                            <td width=\"auto\" align=\"center\"><button class=\"green\" onclick=\"postData('G')\"></button></td>\n                            <td width=\"auto\" align=\"center\"><button class=\"yellow\" onclick=\"postData('Y')\"></button></td>\n                            <td width=\"auto\" align=\"center\"><button class=\"red\" onclick=\"postData('R')\"></button></td>\n                        </tr>\n            <tr>\n            <div class=\"showButton\">\n                <div>\n                    <td></td>\n                    <td width=\"auto\" align=\"center\"><input type=\"button\" id=\"feedback\" class=\"btn\" value=\"Visualize user's feedbacks\" onclick=\"window.location.href='https://thinkdeskmoods.mybluemix.net/feedback'\"/></td>\n                </div>\n            </div>\n            </tr>\n        </tbody>\n        \n    </table>\n</body>\n\n</html>\n","output":"str","x":590,"y":140,"wires":[["2c33e04c.59a4f8"]]},{"id":"81b429c1.6da298","type":"http in","z":"bdb3d653.b005e8","name":"Save Data","url":"/savedata","method":"post","upload":false,"swaggerDoc":"","x":240,"y":220,"wires":[["41feca31.40902c"]]},{"id":"f6b43f29.b72e2","type":"cloudant out","z":"bdb3d653.b005e8","name":"saveWebData","cloudant":"","database":"comments","service":"thinkdeskmoods-cloudantNoSQLDB","payonly":true,"operation":"insert","x":860,"y":220,"wires":[]},{"id":"41feca31.40902c","type":"function","z":"bdb3d653.b005e8","name":"WEBPOST","func":"msg.payload;\nvar date = new Date();\nmsg.payload.date = date;\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":220,"wires":[["c097c9ed.2307d8"]]},{"id":"c097c9ed.2307d8","type":"json","z":"bdb3d653.b005e8","name":"usersfeedback","pretty":false,"x":640,"y":220,"wires":[["f6b43f29.b72e2"]]},{"id":"2a0d26aa.38fb62","type":"http in","z":"bdb3d653.b005e8","name":"Get Feedback","url":"/feedback","method":"get","upload":false,"swaggerDoc":"","x":251,"y":300,"wires":[["649bff17.15c508"]]},{"id":"20928ee7.b9fc92","type":"http response","z":"bdb3d653.b005e8","name":"Response","statusCode":"","headers":{},"x":1080,"y":300,"wires":[]},{"id":"649bff17.15c508","type":"cloudant in","z":"bdb3d653.b005e8","name":"Get Feedback","cloudant":"","database":"comments","service":"thinkdeskmoods-cloudantNoSQLDB","search":"_all_","design":"","index":"","x":460,"y":300,"wires":[["c9470afd.855108"]]},{"id":"c9470afd.855108","type":"function","z":"bdb3d653.b005e8","name":"List formatting","func":"\nvar cty = flow.get('country');\nvar dpt = flow.get('dept');\n\nvar newmsg={};\nnewmsg.payload=\"<br>\";\n\nvar msg2 = {};\nmsg2.payload = \"[\";\n\nvar Green = 0;\nvar Amber = 0;\nvar Red = 0;\nvar Total = 0;\n\nvar last30days = new Date();\nvar dd = last30days.getDate();\nvar mm = last30days.getMonth(); //January is 0!\nvar yyyy = last30days.getFullYear();\n\nif(dd<10) {\n    dd = '0'+dd\n} \n\nif(mm<10) {\n    mm = '0'+mm\n} \n\nlast30days = yyyy + '-' + mm + '-' + dd;\n\nfor (i=0; i<msg.payload.length; i++)\n\n{\n    if (msg.payload[i].country === cty && msg.payload[i].dept === dpt)\n    \n    {\n        if (msg.payload[i].date > last30days) {\n            \n            if (msg.payload[i].mood === \"G\") {\n               Green += 1;\n            } else if (msg.payload[i].mood === \"Y\") {\n               Amber += 1;\n            } else {\n               Red += 1;\n            }\n            newmsg.payload = newmsg.payload + \"<tr><td>\"+ msg.payload[i].country + \"</td><td>\"+ msg.payload[i].dept + \"</td><td><img src='/images/xmood\" + msg.payload[i].mood + \".png'></td><td>\"+ msg.payload[i].comment + \"</td></tr>\";\n            if (i === msg.payload.length){\n              msg2.payload += \"{\\\"country\\\" : \\\"\" + msg.payload[i].country + \"\\\", \\\"dept\\\" : \\\"\" + msg.payload[i].dept + \"\\\", \\\"mood\\\" : \\\"xmood\" + msg.payload[i].mood + \"\\\" ,\\\"comment\\\" : \\\"\" + msg.payload[i].comment + \"\\\"}\";\n            }\n            msg2.payload += \"{\\\"country\\\" : \\\"\" + msg.payload[i].country + \"\\\", \\\"dept\\\" : \\\"\" + msg.payload[i].dept + \"\\\", \\\"mood\\\" : \\\"xmood\" + msg.payload[i].mood + \"\\\" ,\\\"comment\\\" : \\\"\" + msg.payload[i].comment + \"\\\"},\";\n        }\n    }\n}\n\nTotal = Green + Amber + Red;\n\nvar metrics = {Green:Green,Amber:Amber,Red:Red,Total:Total};\n\nmsg.workout = metrics;\n\nmsg2.payload += \"]\";\nnode.warn(msg2);\n\n\nmsg.payload = \"<div class='banner'></div><table border = 1>\";\nmsg.payload = msg.payload + \"<tr><th>Country</th><th>Department</th><th>Mood</th><th>Comment</th></tr>\";\nmsg.payload = msg.payload + newmsg.payload + \"</table>\";\n\nreturn msg;","outputs":1,"noerr":0,"x":680,"y":300,"wires":[["56fffb9.8e06484"]]},{"id":"5ad96c2c.34e46c","type":"comment","z":"bdb3d653.b005e8","name":"Step 1","info":"This section is used to generate the webpage with the choice of select the appropriate mood marble.\nIl also provide input to the Step 2","x":90,"y":140,"wires":[]},{"id":"834bb70e.4bafe","type":"comment","z":"bdb3d653.b005e8","name":"Step 2","info":"This section handle the JSON formatting actions and writes data to Cloudant DB.","x":90,"y":220,"wires":[]},{"id":"93663f62.5b73","type":"comment","z":"bdb3d653.b005e8","name":"Step 3","info":"This section handles the data extraction from Cloudant DB and generate a table list with moods & comments.","x":90,"y":300,"wires":[]},{"id":"56fffb9.8e06484","type":"template","z":"bdb3d653.b005e8","name":"Create Table","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<style>\n\n    .moodG{background-image:url('/images/xmoodG.png');\n    border:0;\n    background-repeat:no-repeat;\n    background-position:center center;\n    background-color:000000;}\n    \n    .moodY{background-image:url('/images/xmoodY.png');\n    border:0;\n    background-repeat:no-repeat;\n    background-position:center center;\n    background-color:000000;}\n    \n    .moodR{background-image:url('/images/xmoodR.png');\n    border:0;\n    background-repeat:no-repeat;\n    background-position:center center;\n    background-color:000000;}\n    \n    table {\n    color: #0000008;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n    }\n    td, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n    }\n    th {\n    background: #ECE9E8;\n    /* Darken header a bit */\n    font-weight: bold;\n    }\n    td {\n    background: #ECE9E8;\n    text-align: center;\n    }\n\n/* Cells in even rows (2,4,6...) are one color */\n\n    tr:nth-child(even) td {\n    background: #FFFFFF;\n    }\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\n    tr:nth-child(odd) td {\n    background: #ECE9E8;\n    }\n    \n</style>\n\n<script type=\"text/javascript\">\n\nfunction draw() {\n    var data = [\n      {\n        value: {{workout.Green}}/{{workout.Total}} ,\n        label: \"Happy\"\n      },\n      {\n        value: {{workout.Amber}}/{{workout.Total}} ,\n        label: \"Neutral\"\n      },\n      {\n        value: {{workout.Red}}/{{workout.Total}} ,\n        label: \"Sad\"\n      }\n    ];\n    \n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d')\n    \n    var colors = ['#029E48', '#FFFF00', '#FF0000']\n    \n    var pieX = 200;\n    var pieY = 200;\n    var pieSize = 150;\n    \n    var sum = 0;\n    \n    for (var di = 0; di != data.length; di++){\n      var segment = data[di];\n      sum += segment.value;\n    };\n    \n    var cumulative = 0\n    \n    for (var di = 0; di != data.length; di++){\n      var segment = data[di];\n      var label = segment.label;\n      var value = segment.value;\n      \n      \n      var startSegment = cumulative/sum * 2 * Math.PI;\n      var endSegment = (cumulative + segment.value)/sum * 2 * Math.PI;\n       \n      // drawing segments\n      ctx.fillStyle = colors[di];\n      ctx.beginPath();\n      ctx.moveTo(pieX, pieY);\n      ctx.arc(pieX, pieY, pieSize, startSegment, endSegment, false);\n      ctx.lineTo(pieX, pieY);\n      ctx.closePath();\n      ctx.fill();\n      \n      // writing labels\n      var diffArc = endSegment - startSegment\n      var labelX = pieX + Math.sin(startSegment + Math.PI/2 + diffArc/2) * pieSize * 0.6;\n      var labelY = pieY - Math.cos(startSegment + Math.PI/2 + diffArc/2) * pieSize * 0.6;\n      \n      ctx.textAlign = 'center';\n      ctx.font = 'bold 11pt Arial';\n       \n      ctx.fillStyle = 'black';\n      ctx.fillText(segment.label + \" - (\" + (segment.value * 100).toFixed(2) + \" %)\", labelX, labelY);\n\n      cumulative += segment.value;\n      \n    }\n}\n\nwindow.onload = draw;\n\n</script>\n\n<html>\n    <head>\n        <title>Agile Mood Marbles</title>\n    </head>\n    <body bgcolor=\"#ECE9E8\">\n        <table class=\"responsive\" width=\"100%\">\n        <thead>\n            <tr>\n                <div class='illustration'>\n                    <th><img src=\"/images/moodmarbles.png\"></th>\n                    <th><canvas id=\"canvas\" width=\"350\" height=\"350\" align=center></canvas></th>\n                </div>\n            </tr>\n                <th colspan=\"2\" align=\"center\" style=\"color:#000000\">\n                    <h1>Users's Feelings</h1>\n                </th>\n            </tr>\n        </thead>\n    </table>\n    </body>\n    {{{payload}}}\n    </body>\n</html>","output":"str","x":890,"y":300,"wires":[["20928ee7.b9fc92"]]},{"id":"58cfde67.4dc26","type":"template","z":"bdb3d653.b005e8","name":"CSS","field":"payload.style","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"    .btn {\n        background: #f59608;\n        background-image: -webkit-linear-gradient(top, #f59608, #e02020);\n        background-image: -moz-linear-gradient(top, #f59608, #e02020);\n        background-image: -ms-linear-gradient(top, #f59608, #e02020);\n        background-image: -o-linear-gradient(top, #f59608, #e02020);\n        background-image: linear-gradient(to bottom, #f59608, #e02020);\n        -webkit-border-radius: 30;\n        -moz-border-radius: 30;\n        border-radius: 30px;\n        font-family: Arial;\n        color: #ffffff;\n        font-size: 24px;\n        width: 400px;\n        height: 80px;\n        margin: 0 auto;\n        padding: 10px 30px 10px 30px;\n        text-decoration: none;\n        visibility: hidden;\n    }\n\n    .btn:hover {\n        background: #e02020;\n        background-image: -webkit-linear-gradient(top, #e02020, #f59608);\n        background-image: -moz-linear-gradient(top, #e02020, #f59608);\n        background-image: -ms-linear-gradient(top, #e02020, #f59608);\n        background-image: -o-linear-gradient(top, #e02020, #f59608);\n        background-image: linear-gradient(to bottom, #e02020, #f59608);\n        text-decoration: none;\n    }\n\n    .green {\n        background-image: url('/images/moodG.png');\n        width: 400px;\n        height: 400px;\n        border: 0;\n        background-repeat: no-repeat;\n        background-position: center center;\n        background-color: 000000;\n    }\n\n    .yellow {\n        background-image: url('/images/moodY.png');\n        width: 400px;\n        height: 400px;\n        border: 0;\n        background-repeat: no-repeat;\n        background-position: center center;\n        background-color: 000000;\n    }\n\n    .red {\n        background-image: url('/images/moodR.png');\n        width: 400px;\n        height: 400px;\n        border: 0;\n        background-repeat: no-repeat;\n        background-position: center center;\n        background-color: 000000;\n    }\n    \n    .hidden>div {\n\t    display:none;\n    }\n\n    .visible>div {\n    \tdisplay:block;\n    }\n\n    html,\n    body,\n    h1,\n    form,\n    fieldset,\n    legend,\n    ol,\n    li {\n        margin: 0;\n        padding: 0;\n    }\n\n    body {\n        background: #000000;\n        color: #FFFFFF;\n        font-family: Arial, Helvetica, sans-serif;\n        padding: 20px;\n        margin: 0 auto;\n    }\n    \n    label {\n        display: inline-block;\n        width: 200px;\n        text-align: left;\n    }","output":"str","x":390,"y":140,"wires":[["1fe5c141.2f0907"]]},{"id":"b30d53b2.ed6b68","type":"comment","z":"bdb3d653.b005e8","name":"Agile Mood Marble - README","info":"This Flow supports the Agile practice of Mood Marble.\n\nIt is composed by three different steps:\n\nStep 1 - generates the webpage and get all inputs\n    The CSS node sets the \"msg.payload.style\" property.\n    The HTML node then includes these properties \n    <style>{{{payload.style}}}</style>\n\nStep 2 - save data on Cloudant DB\n    Data are then saved on Cloudant Db to make them\n    available for future use\n\nStep 3 - provides webpage with details\n    Here, data are been retrieved,\n    formatted in a table and visualized.\n    A filter is applied to show only records\n    belonging to the same \"country\" and \"dept\".\n\n\n\n\n","x":160,"y":60,"wires":[]},{"id":"6b5d7bb9.47c3f4","type":"catch","z":"bdb3d653.b005e8","name":"","scope":null,"x":240,"y":460,"wires":[["ebefd44c.59bed"]]},{"id":"ebefd44c.59bed","type":"debug","z":"bdb3d653.b005e8","name":"error message","active":true,"console":"false","complete":"true","x":440,"y":460,"wires":[]},{"id":"2c33e04c.59a4f8","type":"http response","z":"bdb3d653.b005e8","name":"","statusCode":"","headers":{},"x":790,"y":140,"wires":[]},{"id":"350852da.068066","type":"websocket in","z":"bdb3d653.b005e8","name":"","server":"1618a842.96374","client":"","x":250,"y":380,"wires":[["20692675.b71842"]]},{"id":"20692675.b71842","type":"function","z":"bdb3d653.b005e8","name":"StoreValues","func":"var msgValues = JSON.parse(msg.payload);\n\nnode.warn(msgValues);\n\nflow.set('country', msgValues.country);\nflow.set('dept', msgValues.dept); \n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":380,"wires":[[]]},{"id":"9d352244.87e35","type":"comment","z":"bdb3d653.b005e8","name":"Step 4","info":"This section provides parameters store capability through websocket","x":90,"y":380,"wires":[]},{"id":"2d9af8c8.b0b2f8","type":"comment","z":"bdb3d653.b005e8","name":"Step 5","info":"Error handling section","x":90,"y":460,"wires":[]},{"id":"1618a842.96374","type":"websocket-listener","z":"","path":"/ws/main","wholemsg":"false"}]